@model IEnumerable<LiveScoresWeb.Entities.LiveBetObj>
<div>
	<h3 class="list-title">Today's Games</h3>
</div>
<div class="container-fluid">
	<div class="row">
		@foreach (var game in Model)
		{
			<div class="thumbnail">
				<div class="h5">#@game.GameId (@game.GameTime - @game.CurrentQuarterDisplay) @game.CurrentStatus</div>
				<div class="h3">@game.VisitorTeamAbbrev @game.VisitorScore &#64; @game.HomeTeamAbbrev @game.HomeScore<span class="bet-details" style="@game.StatusStyle">@game.BetDetailsDisplay</span></div>
				<div class="h5" style="font-style: italic">Risking @game.Risking.ToString("C") to win @game.ToCollect.ToString("C") </div>
			</div>
		}
		@*@(Html
			.Grid(Model)
			.Build(columns =>
			{
				columns.Add(model => model.GameId).Titled("ID").Sortable(false);
				columns.Add(model => model.DayOfWeek).Titled("Day");
				columns.Add(model => model.GameTime).Titled("Game Time");
				columns.Add(model => model.VisitorTeamName).Titled("Visitor");
				columns.Add(model => model.VisitorScore).Titled("Score");
				;
				columns.Add(model => model.HomeTeamName).Titled("Home");
				columns.Add(model => model.HomeScore).Titled("Score");
				columns.Add(model => model.CurrentQuarter).Titled("Quarter");
				columns.Add(model => model.InRedzone).Titled("Red Zone");
				//columns.Add(model => model.SiteUpFilter).RenderedAs(model => "<div align='center'><span style='width:15px; display:inline-block;'><i class=\"" + model.SiteUpDisplay + " " + model.SiteUpDisplayColor + " style=\"font-size:1.3em\" aria-hidden='true'></i></span><span style='width:30px; display:inline-block;'>" + model.SiteID + "</span></div>").Titled("ID").Encoded(false).Filterable(true).Sortable(false);
				//columns.Add(model => "<div align='center'><button onclick=\"openLoginPage(" + model.SiteID + ")\" id=\"btnLogin\" class=\"btn-warning\" data-id=\"" + model.SiteID + "\"><i class='fa fa-sign-in' aria-hidden='true'></i></button></div>").Encoded(false).Css("linkbutton");
				//columns.Add(model => model.SiteName).Titled("Site Name").Filterable(true);
				//columns.Add(model => model.SiteUrl).Titled("URL").Filterable(true);
				//columns.Add(model => model.DatabaseServer).Titled("DB Server").Filterable(true);
				//columns.Add(model => model.SelfHosted).RenderedAs(model => "<div align='center'><i class=\"" + model.SelfHostedDisplay + " greeniconcolor\" style=\"font-size:1.3em;\" aria-hidden='true'></i></div>").Titled("SH").Encoded(false).Filterable(true);
				//columns.Add(model => "<div align='center'><button class=\"edit_button\" style=\"width:65px;\" data-id=\"" + model.SiteID + "\"><i class='fa fa-info-circle' aria-hidden='true'></i> Info</button></div>").Encoded(false);
			})
			.Css("hoverTable")
			.Filterable()
			.Sortable()
			)*@
	</div>
</div>

@*<p>
		<div style="padding-left: 5px; color: AntiqueWhite; font-size: large;" id="currentRowCount">Row Count: </div>
		<div style="padding-left: 5px; color: aqua; font-size: large;">Total Sites: @ViewBag.SiteCount (@ViewBag.SelfHostedCount are self-hosted)</div>
	</p>

	<p>
		<div style="padding-left: 5px; color: aqua; font-size: small;">
			Legend: SH = Self-Hosted Site
		</div>
	</p>*@
